//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.11.10 at 11:13:32 AM CET 
//


package no.fk.fint.felles;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for SivilstandType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="SivilstandType"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *     &lt;enumeration value="ugift"/&gt;
 *     &lt;enumeration value="gift"/&gt;
 *     &lt;enumeration value="enkeEllerEnkemann"/&gt;
 *     &lt;enumeration value="skilt"/&gt;
 *     &lt;enumeration value="separert"/&gt;
 *     &lt;enumeration value="registrertPartner"/&gt;
 *     &lt;enumeration value="separertPartner"/&gt;
 *     &lt;enumeration value="skiltPartner"/&gt;
 *     &lt;enumeration value="gjenlevendePartner"/&gt;
 *     &lt;enumeration value="uoppgitt"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "SivilstandType")
@XmlEnum
public enum SivilstandType {

    @XmlEnumValue("ugift")
    UGIFT("ugift"),
    @XmlEnumValue("gift")
    GIFT("gift"),
    @XmlEnumValue("enkeEllerEnkemann")
    ENKE_ELLER_ENKEMANN("enkeEllerEnkemann"),
    @XmlEnumValue("skilt")
    SKILT("skilt"),
    @XmlEnumValue("separert")
    SEPARERT("separert"),
    @XmlEnumValue("registrertPartner")
    REGISTRERT_PARTNER("registrertPartner"),
    @XmlEnumValue("separertPartner")
    SEPARERT_PARTNER("separertPartner"),
    @XmlEnumValue("skiltPartner")
    SKILT_PARTNER("skiltPartner"),
    @XmlEnumValue("gjenlevendePartner")
    GJENLEVENDE_PARTNER("gjenlevendePartner"),
    @XmlEnumValue("uoppgitt")
    UOPPGITT("uoppgitt");
    private final String value;

    SivilstandType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static SivilstandType fromValue(String v) {
        for (SivilstandType c: SivilstandType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
